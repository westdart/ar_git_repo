---
- name: "Assertions: ar_git_repo (checkout)"
  assert:
    that: "{{ ar_git_repo_assertions }}"

- name: Ensure ssh key is present
  include_tasks: ssh-key-available.yml

- name: Ensure global git settings
  include_tasks: globals.yml

- name: Setfact for repo-dir user supplied
  set_fact:
    _ar_git_repo_paths: "{{ _ar_git_repo_paths | repo_dict(ar_git_repo_url, ar_git_repo_dest) }}"
  when: ar_git_repo_dest is defined and ar_git_repo_url not in _ar_git_repo_paths

- set_fact:
    tmp_path: "/tmp/git/{{ ar_git_repo_url.split('/') | last }}-{{ 100000 | random }}"

- name: Setfact for repo-dir generated
  set_fact:
    _ar_git_repo_paths: "{{ _ar_git_repo_paths | repo_dict(ar_git_repo_url, tmp_path) }}"
  when: ar_git_repo_url not in _ar_git_repo_paths

- name: Setfact to record original value of ar_git_repo_auto_cleanup
  set_fact:
    _ar_git_repo_auto_cleanup: "{{ ar_git_repo_auto_cleanup }}"
  when: ar_git_repo_auto_cleanup

- name: Trigger removal of local git directory
  command: /bin/true
  notify: cleanup
  when: ar_git_repo_auto_cleanup

- name: Switch off ar_git_repo_auto_cleanup (already triggered notify if was set true)
  set_fact:
    ar_git_repo_auto_cleanup: false
  when: ar_git_repo_auto_cleanup

- debug: var=_ar_git_repo_paths verbosity=2

- name: Checkout git repo {{ ar_git_repo_url }} to {{ _ar_git_repo_paths[ar_git_repo_url] }}
  git:
    key_file: "{{ ar_git_repo_ssh_key_path }}"
    repo: "{{ ar_git_repo_url }}"
    dest: "{{ _ar_git_repo_paths[ar_git_repo_url] }}"
    accept_hostkey: yes
    version: "{{ ar_git_repo_version }}"
#  environment: "{{ _ar_git_repo_ssh_agent_env }}"
  changed_when: ar_git_repo_mark_change_on_clone

- name: Ensure ssh key is absent
  include_tasks: ssh-key-clear.yml

- name: Ensure gitignore present
  template:
    src: git-ignore.j2
    dest: "{{ _ar_git_repo_paths[ar_git_repo_url] }}/.gitignore"
